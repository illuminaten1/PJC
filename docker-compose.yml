services:
  mongodb:
    image: mongo:latest
    container_name: pjc-mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
    networks:
      - pjc-network

  backend:
    build: ./backend
    container_name: pjc-backend
    restart: always
    ports:
      - "5002:5002"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/protection-juridique?authSource=admin
      - JWT_SECRET=pjc_secret_key
      - PORT=5002
      - SKIP_DATA_INIT=false
    depends_on:
      - mongodb
    volumes:
      - ./backend/templates:/app/templates
      - ./backend/temp:/app/temp
    networks:
      - pjc-network

  frontend:
    image: nginx:alpine
    container_name: pjc-frontend
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    volumes:
      - ./client/build:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    networks:
      - pjc-network

  certbot:
    image: certbot/certbot
    container_name: pjc-certbot
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - pjc-network

networks:
  pjc-network:
    driver: bridge

volumes:
  mongodb_data: